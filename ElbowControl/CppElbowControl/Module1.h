///////////////////////////////////////////////////////////////////////////////
// Module1.h
#pragma once

#include "CppElbowControlInterfaces.h"
#include "PID_Position.h"
#include "Elbow.h"

class CModule1 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST(CID_CppElbowControlCModule1)
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CModule1();
	virtual	~CModule1();
	void UpdateInputs();//将PLC变量更新到C++变量
	void UpdateOutputs();//将C++变量更新到PLC变量


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

	// Tracing
	CTcTrace m_Trace;

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	Module1Parameter m_Parameter;
	Module1Inputs m_Inputs;
	Module1Outputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	// TODO: Custom variable
	UINT m_counter;
	float timer;	//plc时间
	//float angle;	//编码器角度
	//float radian;	//编码器角度转换弧度值
	//float SetRad;	//角度给定值
	float SetAngle;	//角度给定值
	PID_Position PID4Elbow;
	Elbow elbow;
};
